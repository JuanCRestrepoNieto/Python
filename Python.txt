Python

Algoritmo
- No ambiguo (que un método tenga el mismo significado en todo lado)

Console Cmder

    ctrl l para limpiar la consola

    cd (chase directory) 

    cd .. (carpeta padre)

    cd Folder

    ls (list from folder of its documents/folders)

    mkdir (make directory) folderName

    touch example.txt (create a document)

    exit() para salir del modo python

La consola nos permite ejecutar líneas de código de forma independiente

El comando que lo inicia es py en windows
Sale la versión de python, la fecha, y comandos para empezar a trabajar.
>>> es para escribir código python

>>> 5 + 5 
10

>>> print(5 + 5)
10

>>> 5 - 5
0
>>> 2 * 5
10

>>> 21 / 5
4.2

>>> 21 // 5
4

>>> 21 % 5
1

>>> 2 ** 2
4

>>> 5 + 5 * 2
15

import numpy
>>> sqrt(4)
2

>>> 4**0.5
2

import math
>>> math.sqrt(25)
5


Variables

    ¿Qué es?
        Símbolo constituyente de un predicado, para asignar una cantidad suceptible a cambios
    
    Para asignar un valor
    num = 3

>>> num1 = 5
>>> num2 = 6
>>> num1-num2
-1
>>> num2-num1
1
>>> num2-num2
0
>>> num1+num2
11

Uso de variable_a, separar las palabras por guión bajo

Variables Primitivas (tipos de datos sencillos)
        Enteros
        Punto flotante (decimales)
        Texto
        Bool

    >>> nombre = "Juan"
    >>> nombre
    'Juan'
    >>> nombre = 'Juan'
    >>> nombre
    'Juan'

    >>> nombre1 = 'José'
    >>> nombre+nombre1
    'JuanJosé'

    >>> nombre*10
    'JuanJuanJuanJuanJuanJuanJuanJuanJuanJuan'
    >>>

    >>> booleano = false
    Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
    NameError: name 'false' is not defined. Did you mean: 'False'?
    >>> booleano = False
    >>> booleano
    False
    >>>

Input y Casteo
    >>> num1 = input("Escribe un número: ")
    Escribe un número: 5,
    >>> num1
    '5,'
    >>> num1=input("Escribe un número")
    Escribe un número1
    >>> num1
    '1'
    >>>>>> num2 = input("Escribe un número: ")
    Escribe un número: 4
    >>> num1+num2
    '14'
    >>>

    >>> num1 = int(num1)
    >>> num1
    1
    >>> num2 = int(num2)
    >>> num2
    4
    >>> num1+num2
    5
    >>>

    >>> numDec = 4.6
    >>> int(4.6)
    4
    >>> numDec = str(numDec)
    >>> numDec
    '4.6'
    >>>

Operadore lógicos y comparación
Lógicos
    >>> es_estudiante = True
    >>> es_estudiante
    True
    >>> trabaja = False
    >>> trabaja
    False
    >>> es_estudiante and trabaja
    False
    >>> es_estudiante or trabaja
    True
    >>> not es_estudiante
    False
    >>> not trabaja
    True
    >>> es_estudiante and not trabaja
    True
    >>>

Comparación
    >>> num1 = 5
    >>> num2= 5
    >>> num1 == num2
    True
    >>> num3 =8
    >>> num1 == num3
    False
    >>> num1 != num3
    True
    >>> num > num3
    Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
    NameError: name 'num' is not defined. Did you mean: 'num1'?
    >>> num1 >num3
    False
    >>> num1<num3
    True
    >>> num1<num2
    False
    >>> num1>=num3
    False
    >>> num1<=num3
    True
    >>> num1>=num2
    True
    >>>

Funciones
    def imprimir_mensaje():
        print ("Mensaje")

Métodos
    nombre.upper()
        Volver la cadena de texto en mayúscula 
    nombre.capitalize()
    nombre.strip()  Elimina los espacios basura al final y principio de la cadena
    nombre.lower()  
    nombre[0]
    len(nombre) devuelve el tamaño de la cadena de caracteres


Slices
    pla|tzi
    p|latzi
    nombre = "Francisco"
    nombre[0] 
    va retornar F
    nombre[0:3] 
    retorna Fra
    nombre[:3] 
    retorna Fra
    nombre[3:] 
    ncisco
    nombre[1:7:2] 
    retorna rni, el último índice indica cuantos saltos realizar para retornar un valor
    nombre[::]
    Francisco
    nombre[1::3]
    rcc
    nombre[::-1]
    ocsicnarF (palíndromo)

Palíndromos


Ciclos
    Imprimir todas las potencias de 2 hasta llegar a 1000

    while(cont < limite):
        print(cont)
        cont += 1

    for cont in range(limite):
        print(cont)

Constante
    NUMERO = 1
    const igual 1, se define constante con su nombre en mayúscula

list
    a = list(range(1000))
    print(a)
    '[0, 1, 2, ..., 998, 999]'
    a = list(range(1, 1001))
    '[1, 2, 3, ..., 999, 1000]'